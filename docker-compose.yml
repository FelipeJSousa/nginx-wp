services:
  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
      args:
          NGINX_VERSION: ${NGINX_VERSION}
    env_file: .env
    restart: always
    volumes:
        - ./nginx/conf.d/:/etc/nginx/conf.d/
        - ./public:/var/www/html
        - ./certbot/conf:/etc/letsencrypt
        - ./certbot/data:/var/www/certbot
    command: "/bin/sh -c 'while :; do sleep 2m & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    ports:
      - "80:80"
      - "443:443"
    networks:
      - internal

  certbot:
      container_name: certbot
      image: certbot/certbot:latest
      entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
      restart: always
      volumes:
          - ./certbot/conf:/etc/letsencrypt
          - ./certbot/logs:/var/log/letsencrypt
          - ./certbot/data:/var/www/certbot
          
  wordpress:
    container_name: wordpress
    image: wordpress:php8.3-apache
    restart: always
    env_file: .env
    environment:
      WORDPRESS_DB_PASSWORD: '${DATABASE_ROOT_PASSWORD}'
      WORDPRESS_DB_NAME: '${DATABASE_NAME}'
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_HOST: mariadb
    ports:
      - 9000:80
    depends_on:
      - mariadb
    volumes:
      - ./wordpress/data:/var/www/html:rw
    networks:
      - internal

  mariadb:
    container_name: mariadb
    image: mariadb:11.2.5
    restart: always
    env_file: .env
    environment:
      MYSQL_ROOT_PASSWORD: '${DATABASE_ROOT_PASSWORD}'
      MYSQL_DATABASE: '${DATABASE_NAME}'
    ports:
      - 1106:3306
    volumes:
      - ./database:/var/lib/mysql
    networks:
      - internal

networks:
  internal:
    driver: bridge